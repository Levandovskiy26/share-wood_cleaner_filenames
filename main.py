import sys
import os
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLineEdit, QTextEdit, QPushButton, QMessageBox


class DirectoryCleaner(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle('–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏')

        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        layout = QVBoxLayout()

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–µ
        self.path_input = QLineEdit(self)
        self.path_input.setPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ...')
        layout.addWidget(self.path_input)

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å
        self.prefix_input = QLineEdit(self)
        self.prefix_input.setPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)...')
        self.prefix_input.setText('[SW.BAND]')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        layout.addWidget(self.prefix_input)

        # –û–∫–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–∫–∏
        self.output_area = QTextEdit(self)
        self.output_area.setReadOnly(True)
        layout.addWidget(self.output_area)

        # –ö–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å"
        self.clear_button = QPushButton('–û—á–∏—Å—Ç–∏—Ç—å', self)
        self.clear_button.clicked.connect(self.clear_directory)
        layout.addWidget(self.clear_button)

        self.setLayout(layout)

    def clear_directory(self):
        path = self.path_input.text()
        if os.path.isdir(path):
            self.output_area.clear()
            self.rename_and_print_directory_structure(path)
            QMessageBox.information(self, '–£—Å–ø–µ—Ö', '–ü–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞!')
        else:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π.')

    def rename_and_print_directory_structure(self, path, indent=0):
        items = os.listdir(path)
        prefixes_to_remove = [prefix.strip() for prefix in self.prefix_input.text().split(',')]

        for item in items:
            full_path = os.path.join(path, item)

            if item.startswith('.DS_Store'):
                continue

            # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–±–ª–æ–Ω–∞–º
            if (item.startswith('[DMC.RIP]') and item.endswith('.url')) or (
                    item.startswith('[WWW.SW.BAND]') and (item.endswith('.url') or item.endswith('.docx'))):
                os.remove(full_path)
                continue

            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
            for prefix in prefixes_to_remove:
                if item.startswith(prefix):
                    new_name = item.replace(prefix, '').strip()
                    new_full_path = os.path.join(path, new_name)
                    os.rename(full_path, new_full_path)
                    item = new_name
                    break  # –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –Ω–∞–π–¥–µ–Ω –∏ —É–¥–∞–ª—ë–Ω

            # –í—ã–≤–æ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–∫–∏
            self.output_area.append(' ' * indent + f"üìÅ {item}")

            # –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π, —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            if os.path.isdir(full_path):
                self.rename_and_print_directory_structure(full_path, indent + 4)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = DirectoryCleaner()
    ex.resize(600, 400)
    ex.show()
    sys.exit(app.exec_())
