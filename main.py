import sys
import os
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLineEdit, QTextEdit, QPushButton, QMessageBox


class DirectoryCleaner(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle('–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏')

        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        layout = QVBoxLayout()

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–µ
        self.path_input = QLineEdit(self)
        self.path_input.setPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ...')
        layout.addWidget(self.path_input)

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å
        self.prefix_input = QLineEdit(self)
        self.prefix_input.setPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)...')
        self.prefix_input.setText('[SW.BAND]')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        layout.addWidget(self.prefix_input)

        # –û–∫–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–∫–∏
        self.output_area = QTextEdit(self)
        self.output_area.setReadOnly(True)
        layout.addWidget(self.output_area)

        # –ö–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å"
        self.clear_button = QPushButton('–û—á–∏—Å—Ç–∏—Ç—å', self)
        self.clear_button.clicked.connect(self.clear_directory)
        layout.addWidget(self.clear_button)

        self.setLayout(layout)

    def clear_directory(self):
        path = self.path_input.text()
        if os.path.isdir(path):
            self.output_area.clear()
            self.rename_and_print_directory_structure(path)
            QMessageBox.information(self, '–£—Å–ø–µ—Ö', '–ü–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞!')
        else:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π.')

    def rename_and_print_directory_structure(self, path, indent=0):
        prefixes_to_remove = [prefix.strip() for prefix in self.prefix_input.text().split(',')]

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —É—Å–ª–æ–≤–∏—è
        parent_dir = os.path.dirname(path)
        folder_name = os.path.basename(path)

        new_folder_name = folder_name
        for prefix in prefixes_to_remove:
            if folder_name.startswith(prefix):
                new_folder_name = folder_name.replace(prefix, '').strip()
                break

        if new_folder_name != folder_name:
            new_path = os.path.join(parent_dir, new_folder_name)
            os.rename(path, new_path)
            path = new_path  # –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
            folder_name = new_folder_name

        # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
        self.output_area.append(' ' * indent + f"üìÅ {folder_name}")

        # –¢–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–π –ø–∞–ø–∫–∏
        try:
            items = os.listdir(path)
        except PermissionError:
            self.output_area.append(' ' * (indent + 4) + "[–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞]")
            return

        for item in items:
            full_path = os.path.join(path, item)

            if item.startswith('.DS_Store'):
                continue

            # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω–∞–º
            if (item.startswith('[DMC.RIP]') and item.endswith('.url')) or (
                    item.startswith('[WWW.SW.BAND]') and (item.endswith('.url') or item.endswith('.docx'))):
                try:
                    if os.path.isdir(full_path):
                        os.rmdir(full_path)
                    else:
                        os.remove(full_path)
                except Exception as e:
                    self.output_area.append(' ' * (indent + 4) + f"[–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}]")
                continue

            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
            new_item = item
            for prefix in prefixes_to_remove:
                if item.startswith(prefix):
                    new_item = item.replace(prefix, '').strip()
                    new_full_path = os.path.join(path, new_item)
                    try:
                        os.rename(full_path, new_full_path)
                    except Exception as e:
                        self.output_area.append(' ' * (indent + 4) + f"[–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {e}]")
                    break  # –≤—ã—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è

            # –ï—Å–ª–∏ —ç—Ç–æ –ø–∞–ø–∫–∞, —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
            new_full_path = os.path.join(path, new_item)
            if os.path.isdir(new_full_path):
                self.rename_and_print_directory_structure(new_full_path, indent + 4)
            else:
                self.output_area.append(' ' * (indent + 4) + f"üìÑ {new_item}")


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = DirectoryCleaner()
    ex.resize(600, 400)
    ex.show()
    sys.exit(app.exec_())
